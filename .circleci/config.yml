version: 2.1

defaults:
  etcd: &etcd
    image: quay.io/coreos/etcd:v3.3
  kube-apiserver: &kube-apiserver
    image: gcr.io/google-containers/kube-apiserver-amd64:v1.14.2
    command:
    - /usr/local/bin/kube-apiserver
    - --etcd-servers=http://localhost:2379
    - --cert-dir=.
    - --admission-control=AlwaysAdmit
  kube-controller-manager: &kube-controller-manager
    image: gcr.io/google-containers/kube-controller-manager-amd64:v1.14.2
    command:
    - /usr/local/bin/kube-controller-manager
    -  --master=http://localhost:8080
    - --controllers=garbagecollector,namespace

executors:
  rc_test:
    docker:
    - image: circleci/golang:1
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    environment:
      KUBECONFIG: /go/src/github.com/Ridecell/ridecell-operator/hack/config.yml
      USE_EXISTING_CLUSTER: true

commands:
  rc_setup:
    steps:
    - checkout
    - restore_cache:
        keys:
        - v2-vendor-{{ checksum "Gopkg.lock" }}
    - run: make dep
    - run: echo "export RAND_OWNER_PREFIX=x$(head -c 512 /dev/urandom | tr -dc 'a-z0-9' | head -c 8)" >> $BASH_ENV

  rc_cleanup:
    parameters:
      aws:
        default: false
        type: boolean
      cover:
        type: string
    steps:
    - run: mkdir workspace workspace/cover && cp gover.coverprofile workspace/cover/test_<< parameters.cover >>.coverprofile
    - persist_to_workspace:
        root: workspace
        paths:
        - cover/test_<< parameters.cover >>.coverprofile
    - when:
        condition: << parameters.aws >>
        steps:
        - run:
            command: go run scripts/aws_cleanup/delete_operator_resources.go
            when: always
            no_output_timeout: 15m

  rc_test:
    parameters:
      aws:
        default: false
        type: boolean
      cover:
        type: string
      timeout:
        default: 10m
        type: string
    steps:
    - rc_setup
    - run:
        command: make test
        no_output_timeout: << parameters.timeout >>
    - rc_cleanup:
        cover: << parameters.cover >>
        aws: << parameters.aws >>

jobs:
  test_notifications:
    executor: rc_test
    docker:
    - image: circleci/golang:1
    - *etcd
    - *kube-apiserver
    - *kube-controller-manager
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    environment:
      GINKGO_ARGS: -focus @notifications
    steps:
    - rc_test:
        cover: other
        aws: true

  test_rds:
    executor: rc_test
    docker:
    - image: circleci/golang:1
    - *etcd
    - *kube-apiserver
    - *kube-controller-manager
    environment:
      GINKGO_ARGS: -focus @rds
    steps:
    - checkout
    # stop test_rds job if there were no rds file changes
    - run:
        name: Skip Testing if No RDS Changes
        command: |
          rds_changes=$(git diff --name-only $(git merge-base --fork-point master)..HEAD | grep rds | grep -v "snapshot")
          if [ $(echo $rds_changes | wc -l) -le 0 ]
            then
              echo "No RDS related changes seen. Skipping RDS tests."
              circleci-agent step halt
            else
              echo "RDS related changes found in: $rds_changes"
          fi
    - rc_test:
        cover: rds
        aws: true
        timeout: 30m

workflows:
  version: 2
  default:
    jobs:
    - test_notifications
    - test_rds