version: 2
jobs:
  test:
    docker:
    - image: circleci/golang:1
    - image: rabbitmq:3-management-alpine
      environment:
        RABBITMQ_VM_MEMORY_HIGH_WATERMARK: 256Mi
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    environment:
      RABBITMQ_URI: http://guest:guest@localhost:15672
      GINKGO_ARGS: -skip '@(postgres|aws)'
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-vendor-{{ checksum "Gopkg.lock" }}
        - v1-vendor
    - run: echo "export RAND_OWNER_PREFIX=$(head -c 512 /dev/urandom | tr -dc 'a-z0-9' | head -c 8)" >> $BASH_ENV
    - run: sudo mkdir /usr/local/kubebuilder/
    - run: curl -L https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_linux_amd64.tar.gz | sudo tar -zxv --strip-components=1 -C /usr/local/kubebuilder/
    - run: make dep test
    - run:
        command: go run scripts/aws_cleanup/delete_operator_resources.go
        when: always
        no_output_timeout: 15m
    - run: mkdir workspace workspace/cover && cp -r config/crds workspace/crds && cp gover.coverprofile workspace/cover/test.coverprofile
    - persist_to_workspace:
        root: workspace
        paths:
        - crds
        - cover/test.coverprofile

    - save_cache:
        key: v1-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - vendor/

  test_postgres:
    docker:
    - image: circleci/golang:1
    - image: postgres:11-alpine
      environment:
        POSTGRES_PASSWORD: rootpass
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    environment:
      GINKGO_ARGS: -focus @postgres
      POSTGRES_URI: postgres://postgres:rootpass@localhost/postgres
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-vendor-{{ checksum "Gopkg.lock" }}
        - v1-vendor
    - run: echo "export RAND_OWNER_PREFIX=$(head -c 512 /dev/urandom | tr -dc 'a-z0-9' | head -c 8)" >> $BASH_ENV
    - run: sudo mkdir /usr/local/kubebuilder/
    - run: curl -L https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_linux_amd64.tar.gz | sudo tar -zxv --strip-components=1 -C /usr/local/kubebuilder/
    - run: make dep test
    - run: mkdir workspace workspace/cover && cp gover.coverprofile workspace/cover/test_postgres.coverprofile
    - persist_to_workspace:
        root: workspace
        paths:
        - cover/test_postgres.coverprofile

  test_aws:
    docker:
    - image: circleci/golang:1
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    environment:
      GINKGO_ARGS: -focus @aws -skip @rds
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-vendor-{{ checksum "Gopkg.lock" }}
        - v1-vendor
    - run: echo "export RAND_OWNER_PREFIX=$(head -c 512 /dev/urandom | tr -dc 'a-z0-9' | head -c 8)" >> $BASH_ENV
    - run: sudo mkdir /usr/local/kubebuilder/
    - run: curl -L https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_linux_amd64.tar.gz | sudo tar -zxv --strip-components=1 -C /usr/local/kubebuilder/
    - run:
        command: make dep test
        no_output_timeout: 30m
    - run: mkdir workspace workspace/cover && cp gover.coverprofile workspace/cover/test_aws.coverprofile
    - persist_to_workspace:
        root: workspace
        paths:
        - cover/test_aws.coverprofile
    - run:
        command: go run scripts/aws_cleanup/delete_operator_resources.go
        when: always
        no_output_timeout: 15m

  test_rds:
    docker:
    - image: circleci/golang:1
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    environment:
      GINKGO_ARGS: -focus @rds
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-vendor-{{ checksum "Gopkg.lock" }}
        - v1-vendor
    - run: echo "export RAND_OWNER_PREFIX=$(head -c 512 /dev/urandom | tr -dc 'a-z0-9' | head -c 8)" >> $BASH_ENV
    - run: sudo mkdir /usr/local/kubebuilder/
    - run: curl -L https://storage.googleapis.com/kubebuilder-release/kubebuilder_master_linux_amd64.tar.gz | sudo tar -zxv --strip-components=1 -C /usr/local/kubebuilder/
    - run:
        command: make dep test
        no_output_timeout: 30m
    - run: mkdir workspace workspace/cover && cp gover.coverprofile workspace/cover/test_rds.coverprofile
    - persist_to_workspace:
        root: workspace
        paths:
        - cover/test_rds.coverprofile
    - run:
        command: go run scripts/aws_cleanup/delete_operator_resources.go
        when: always
        no_output_timeout: 15m

  coveralls:
    docker:
    - image: circleci/golang:1
    working_directory: /go/src/github.com/Ridecell/ridecell-operator
    steps:
    - checkout
    - attach_workspace:
        at: workspace
    - run: make dep generate
    - run: gover
    - run: goveralls -coverprofile=gover.coverprofile -service=circle-ci -repotoken=$COVERALLS_TOKEN

  build:
    docker:
    - image: us.gcr.io/ridecell-public/docker-gcloud:2018-09-17
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: workspace
    - run: docker build -t us.gcr.io/ridecell-1/ridecell-operator:${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}-${CIRCLE_BRANCH} .
    - run: echo ${GCP_SERVICE_ACCOUNT} > gcp-key.json
    - run: gcloud auth activate-service-account --key-file gcp-key.json
    - run: gcloud --quiet config set project ridecell-1
    - run: gcloud auth configure-docker
    - run: docker push us.gcr.io/ridecell-1/ridecell-operator:${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}-${CIRCLE_BRANCH}
    - run: echo ${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}-${CIRCLE_BRANCH} > workspace/tag
    - persist_to_workspace:
        root: workspace
        paths:
        - tag
  deploy:
    docker:
    - image: us.gcr.io/ridecell-public/helm-gcloud:2.8.2
    steps:
    - checkout
    - attach_workspace:
        at: workspace
    - run: echo ${GCP_SERVICE_ACCOUNT_SANDBOX} > gcp-key.json
    - run: gcloud auth activate-service-account --key-file gcp-key.json
    - run: gcloud --quiet config set project ridecell-sandbox
    - run: gcloud container clusters get-credentials noah-test --region=us-west1
    - run: cp workspace/crds/* helm/templates/crds/
    # - run: helm upgrade --install --namespace ridecell-operator --set tag=$(cat workspace/tag) ridecell-operator ./helm

workflows:
  version: 2
  default:
    jobs:
    - test
    - test_postgres:
        requires:
        - test
    - test_aws:
        requires:
        - test
    - test_rds:
        requires:
        - test
    - coveralls:
        requires:
        - test
        - test_postgres
        - test_aws
        - test_rds
    - build:
        requires:
        - test
        - test_postgres
        - test_aws
        - test_rds
    - deploy:
        requires:
        - build
        filters:
          branches:
            only: master
